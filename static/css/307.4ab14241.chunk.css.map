{"version":3,"file":"static/css/307.4ab14241.chunk.css","mappings":"AAIE,8BAEE,WADA,kCCLW,CDQX,gBADA,aACA,CAIJ,0BACE,gBAGF,gCAGE,YAFA,aACA,QACA,CACA,kCACE,cEmFF,wBFpFA,kCAII,eGtBN,8BAEE,WADA,kCFHa,CEKb","sources":["components/pages/Home/Trending.module.scss","../sass/variables/_sizes.scss","../sass/helpers/_mixins.scss","components/pages/Home/Recommendations.module.scss"],"sourcesContent":["@import \"../../../../sass/variables/sizes\";\r\n@import \"../../../../sass/helpers/mixins\";\r\n\r\n.container {\r\n  h2 {\r\n    font-size: $sectionTitle;\r\n    color: #fff;\r\n    margin: 25px 0 25px;\r\n    font-weight: 400;\r\n  }\r\n}\r\n\r\n.carousel {\r\n  overflow: hidden;\r\n}\r\n\r\n.inner-carousel {\r\n  display: flex;\r\n  gap: 30px;\r\n  cursor: grab;\r\n  > * {\r\n    min-width: 45%;\r\n\r\n    @include breakpoint-max(mobile) {\r\n      min-width: 73%;\r\n    }\r\n  }\r\n}\r\n","$sectionTitle: clamp(1.4rem, 7vmin, 2rem);\r\n","// creates a grid layout\r\n/// args >> (element min width),(gap length)\r\n@mixin grid-layout($minWidth, $gap) {\r\n  display: grid;\r\n  place-items: center;\r\n  gap: $gap;\r\n  grid-template-columns: repeat(auto-fill, minmax($minWidth, 1fr));\r\n}\r\n\r\n// creates a flex layout\r\n/// args >> (flex direction),(justify),(align),(gap length)\r\n@mixin flex-layout($direction, $justify, $align, $gap) {\r\n  display: flex;\r\n  justify-content: $justify;\r\n  align-items: $align;\r\n  flex-direction: $direction;\r\n  gap: $gap;\r\n}\r\n\r\n// crnters the element with position\r\n/// args >> (way: top|left|both)\r\n@mixin centered($way) {\r\n  $x: 0;\r\n  $y: 0;\r\n\r\n  @if $way == x {\r\n    $x: 50%;\r\n  } @else if $way == y {\r\n    $y: 50%;\r\n  } @else if $way == both {\r\n    $x: 50%;\r\n    $y: 50%;\r\n  }\r\n\r\n  position: relative;\r\n  left: $x;\r\n  top: $y;\r\n  transform: translate(-#{$x}, -#{$y});\r\n}\r\n\r\n// centers the element with grid\r\n@mixin centered-grid {\r\n  display: grid;\r\n  place-items: center;\r\n}\r\n\r\n// creates hover states animations\r\n/// args >> (backgeound color),(color),(transition duartion)\r\n@mixin hover-state($background, $color, $time) {\r\n  transition: $time;\r\n\r\n  @if $background != null {\r\n    background: $background;\r\n  }\r\n\r\n  @if $color != null {\r\n    color: $color;\r\n  }\r\n}\r\n\r\n// creates the main peusdo element styles\r\n/// args >> (content),(width),(height)\r\n@mixin peusdo($content, $width, $height) {\r\n  content: if($content, $content, \"\");\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// created media queries\r\n/// @param {screen size} {your-content}\r\n@mixin breakpoint($size) {\r\n  @if $size == mobile {\r\n    @media (max-width: 767px) {\r\n      @content;\r\n    }\r\n  } @else if $size == small {\r\n    @media (min-width: 768px) and (max-width: 991px) {\r\n      @content;\r\n    }\r\n  } @else if $size == medium {\r\n    @media (min-width: 992px) and (max-width: 1199px) {\r\n      @content;\r\n    }\r\n  } @else if $size == large {\r\n    @media (min-width: 1200px) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin breakpoint-max($screen) {\r\n  $size: 0px;\r\n\r\n  @if $screen == mobile {\r\n    $size: 767px;\r\n  } @else if $screen == small {\r\n    $size: 991px;\r\n  } @else if $screen == medium {\r\n    $size: 1199px;\r\n  }\r\n\r\n  @media (max-width: $size) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin breakpoint-min($screen) {\r\n  $size: 0px;\r\n\r\n  @if $screen == mobile {\r\n    $size: 767px;\r\n  } @else if $screen == small {\r\n    $size: 991px;\r\n  } @else if $screen == medium {\r\n    $size: 1199px;\r\n  }\r\n\r\n  @media (min-width: $size) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// mixin that add placeholder styles\r\n@mixin placeholder() {\r\n  &::placeholder {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// mixin that makes an element 3d\r\n@mixin hardware($perspective, $backface: false) {\r\n  transform-style: preserve-3d;\r\n  perspective: $perspective;\r\n  backface-visibility: if($backface, visible, hidden);\r\n}\r\n\r\n/// mixin that adds background main styles\r\n@mixin background($pos) {\r\n  background-size: cover;\r\n  background-position: $pos;\r\n  background-repeat: no-repeat;\r\n  object-fit: center;\r\n}\r\n","@import \"../../../../sass/variables/sizes\";\r\n\r\n.title {\r\n  font-size: $sectionTitle;\r\n  color: #fff;\r\n  margin: 25px 0 25px;\r\n}\r\n"],"names":[],"sourceRoot":""}